<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 1. 数据源 : DriverManagerDataSource -->
	<bean id="mysql"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/sekai?useUnicode=yes&amp;characterEncoding=UTF8&amp;useSSL=true" />
		<property name="username" value="root" />
		<property name="password" value="Aa123456" />
	</bean>
	<!--
	<bean id="sqlserver"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="jdbc:sqlserver://localhost:1433;DatabaseName=ms_sekai" />
		<property name="username" value="sa" />
		<property name="password" value="123456" />
	</bean>
	<bean id="oracle"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@10.2.0.228:1521:K3" />
		<property name="username" value="fgedev" />
		<property name="password" value="fgedev" />
	</bean>-->
	<bean id="vendorProperties"  
	    class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
	    <property name="properties">  
	        <props>  
	            <prop key="MySQL">mysql</prop>
	            <prop key="SQL Server">sqlserver</prop>
	            <prop key="Oracle">oracle</prop>
	        </props>  
	    </property>  
	</bean> 
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">  
	    <property name="properties" ref="vendorProperties" />  
	</bean>
	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="mysql" />
        <property name="databaseIdProvider" ref="databaseIdProvider" />
        <property name="configLocation" value="classpath:config/mybatis-cfg.xml" />
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/sekai/*/mapper/*.xml"></property>
		<!-- 分页插件 -->
		<property name="plugins">  
            <array>
            	<bean class="com.sekai.system.utils.PageInterceptor"></bean>
            </array>  
        </property>
    </bean>  

	<!-- 3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory 
		basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sekai.**.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysql"></property>

	</bean>

	<!-- 5. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>
    <context:annotation-config/>
    <context:component-scan base-package="com.sekai.*.service" />

</beans>
